charts:
  - chart:
    local-instance-image:
      - name: alpine
      - tag: latest
    parcel-values-file: parcel-values.yaml
    configurable-values:
      - name: mongodb.db.pass
        label: MongoDB database password
        description: MongoDB database password
        type: string
        default: halo
      - name:  mongodb.node.port
        label: MongoDB port
        description: MongoDB port (nodePort)
        type: port
        default: 32008
      - name: mongodb.storage.class
        label: MongoDB storage class
        description: Storage class name for volume provisioning for MongoDB
        type: string
        default: 
    validate: |
      check_property_val_specified_or_abort "$MONGODB_STORAGE_CLASS" "mongodb.storage.class"
      check_property_val_specified_or_abort "$MONGODB_NODE_PORT" "mongodb.node.port"
    deploy: |
       if [ "${DOCKER_REPO_HOST}" != "" ]
       then
           MONGODB_IMAGE="mongodb"
           MONGODB_METRICS_IMAGE="percona-mongodb-exporter"
           MONGODB_REGISTRY="${DOCKER_REPO_HOST}"
       else
           MONGODB_IMAGE="bitnami/mongodb"
           MONGODB_METRICS_IMAGE="forekshub/percona-mongodb-exporter"
           MONGODB_REGISTRY="docker.io"
       fi

       /usr/local/bin/helm upgrade --install mongodb -f "$UT_HALO_PARCEL_HOME/charts/mongodb/values-production.yaml" "$UT_HALO_PARCEL_HOME/charts/mongodb" \
           --set image.registry="$MONGODB_REGISTRY" \
           --set image.repository="$MONGODB_IMAGE" \
           --set metrics.image.registry="$MONGODB_REGISTRY" \
           --set metrics.image.repository="$MONGODB_METRICS_IMAGE" \
           --set mongodbPassword="${MONGO_DB_PASS}" \
           --set service.nodePort="${MONGO_DB_PORT}" \
           --set persistence.storageClass="${MONGO_DB_STORAGE_CLASS}"
    undeploy: |
      /usr/local/bin/helm delete mongodb --purge
